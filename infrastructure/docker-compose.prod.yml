version: '3'
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4
    container_name: elasticsearch1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
#  elasticsearch2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4
#    environment:
#      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
#      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
#      - "xpack.security.enabled=false"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - esdata2:/usr/share/elasticsearch/data
  postgres:
    image: postgres:alpine
    container_name: postgres
    env_file:
      - env.list
      - env.secret.list
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=400MiB
    ports:
      - "127.0.0.1:5672:5672"
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"

  backend:
    container_name: backend
    image: giffer-backend:latest
    build:
      context: ../src/
    ports:
      - 8000:8000
    env_file:
      - env.list
      - env.secret.list

  frontend:
    container_name: frontend
    image: giffer-frontend:latest
    build:
      context: ../ui/
    ports:
      - 3000:3000
    env_file:
      - env.list
      - env.secret.list

  nginx:
    container_name: nginx
    image: giffer-nginx:latest
    build:
      context: nginx
    ports:
      - "80:80"




volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  pgdata:
    driver: local
